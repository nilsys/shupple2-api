openapi: 3.0.0
info:
  title: shupple-api
  version: 1.0.0
paths:
  /users:
    post:
      tags:
        - user
      summary: ユーザー登録
      requestBody:
        $ref: "#/components/requestBodies/UserRegisterRequest"
      responses:
        "204":
          description: 成功
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - user
      summary: ユーザー更新
      requestBody:
        $ref: "#/components/requestBodies/UserRegisterRequest"
      responses:
        "204":
          description: 成功
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - firebaseAuth: []
    get:
      tags:
        - user
      summary: ユーザー取得
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/{id}:
    get:
      tags:
        - user
      summary: ユーザー取得
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/image:
    post:
      tags:
        - user
      summary: ユーザー画像登録
      requestBody:
        $ref: "#/components/requestBodies/UserRegisterImageRequest"
      responses:
        "204":
          description: 成功
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - firebaseAuth: []
  /users/image/{id}:
    delete:
      tags:
        - user
      summary: ユーザー画像削除
      parameters:
        - in: path
          name: id
          required: true
          description: |
            画像id
          schema:
            type: string
      responses:
        "204":
          description: 成功
      security:
        - firebaseAuth: []
components:
  securitySchemes:
    firebaseAuth:
      in: header
      name: Authorization
      type: apiKey
      description: firebaseから取得するToken
  requestBodies:
    UserRegisterRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserRegisterRequest"
    UserRegisterImageRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserRegisterImageRequest"
  schemas:
    UserRegisterRequest:
      type: object
      required:
        - firebaseToken
        - name
        - email
        - birthdate
        - gender
        - profile
      properties:
        firebaseToken:
          type: string
          description: firebaseで認証して得られたJWT
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3NzcifQ.Gu9mozICWKVRA-32hPAIPNPWe-fNPCQbnV8MKt8vRag"
        name:
          type: string
          description: ユーザー名
          example: かな
        email:
          type: string
          format: email
          description: email
        birthdate:
          type: string
          format: date
          description: 生年月日
        gender:
          $ref: '#/components/schemas/Gender'
        prefecture:
          $ref: '#/components/schemas/Prefecture'
        matchingReason:
          $ref: '#/components/schemas/MatchingReason'
        profile:
          type: string
          description: プロフィール文
          example: 香川出身24歳です！旅大好き！
    UserRegisterImageRequest:
      type: object
      properties:
        priority:
          type: integer
          description: |
            何番目か
        mimeType:
          type: string
          description: |
            画像タイプ
        imageBase64:
          type: string
          format: byte
          description: |
            base64
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        birthdate:
          type: string
          format: date
        profile:
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        prefecture:
          $ref: '#/components/schemas/Prefecture'
        matchingReason:
          $ref: '#/components/schemas/MatchingReason'
        isMatching:
          type: boolean
          description: |
            今マッチング中か
        images:
          type: array
          items:
            $ref: '#/components/schemas/UserImage'
    UserImage:
      type: object
      properties:
        id:
          type: string
        priority:
          type: integer
        url:
          type: string
    MatchingReason:
      type: string
      enum:
        - Renai
        - Asobi
        - ImakaraNomitai
        - SyumatsuDate
    Prefecture:
      type: string
      enum:
        - Hokkaido
        - Aomori
        - Iwate
        - Miyagi
        - Akita
        - Yamagata
        - .....
    Gender:
      type: string
      enum:
        - Male
        - Female
    ErrorCode:
      type: string
      enum:
        - Undefined
        - InvalidParam
        - NotFound
        - ImportDeleted
        - Unauthorized
        - Forbidden
        - InvalidCategoryType
        - PayAgentError
        - DuplicateCard
        - DuplicateReport
        - Expired
    Error:
      type: object
      properties:
        status:
          type: string
        error:
          $ref: "#/components/schemas/ErrorCode"
        body:
          type: string